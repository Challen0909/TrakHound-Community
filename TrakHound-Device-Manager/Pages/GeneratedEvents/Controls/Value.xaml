<UserControl x:Class="TrakHound_Device_Manager.Pages.GeneratedEvents.Controls.Value"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:controls="clr-namespace:TrakHound_Device_Manager.Pages.GeneratedEvents.Controls"
             xmlns:ui="clr-namespace:TrakHound_UI;assembly=TrakHound-UI"
             
             FocusManager.IsFocusScope="False"
             
             mc:Ignorable="d" 
             d:DesignWidth="600">

    <Border CornerRadius="2" BorderThickness="1" Background="Transparent" FocusManager.IsFocusScope="False">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver}" Value="true">
                        <Setter Property="BorderBrush" Value="{StaticResource TrakHound_LightBlue}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <StackPanel Margin="0,10" FocusManager.IsFocusScope="False">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!--Value Label-->
                <TextBlock Grid.Column="0" Text="Value" FontSize="12" Foreground="{StaticResource Text}" Margin="10,5" VerticalAlignment="Center" FocusManager.IsFocusScope="False"/>

                <!--Value Name Input-->
                <Border Grid.Column="1" BorderThickness="1" CornerRadius="1" Margin="0,5,0,5" MinWidth="100" FocusManager.IsFocusScope="False">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=valuename_TXT}" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource TrakHound_Blue}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <!--User Input-->
                    <TextBox x:Name="valuename_TXT" Text="{Binding ValueName}" TextChanged="ValueName_TextChanged" Padding="20,0" BorderThickness="0" Foreground="{StaticResource Text}" Background="Transparent" FontSize="12" Height="30" VerticalAlignment="Center" VerticalContentAlignment="Center" MaxLines="1" CaretBrush="Black">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="TextAlignment" Value="Left"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFocused, ElementName=valuename_TXT}" Value="true">
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                </Border>

                <!--Remove Value Button-->
                <ui:Button Grid.Column="3" Image="/TrakHound-Device-Manager;component/Resources/X_01.png" Style="{StaticResource Button_Accent_Foreground}" Margin="10,0" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="Hand" Clicked="Remove_Clicked" FocusManager.IsFocusScope="False"/>

            </Grid>

            <Rectangle Height="1" Fill="{StaticResource Border}" Margin="10,20"/>

            <TextBlock Grid.Column="1" FontSize="12" Foreground="{StaticResource Text}" Margin="10,0,0,10" FocusManager.IsFocusScope="False">
                Triggers - Value is met when all of the Trigger conditions are met
            </TextBlock>

            <StackPanel Grid.Row="1" VerticalAlignment="Center" FocusManager.IsFocusScope="False">

                <!--Triggers-->
                <ItemsControl ItemsSource="{Binding Triggers}" FocusManager.IsFocusScope="False">
                    <ItemsControl.Resources>
                        <Style TargetType="controls:Trigger">
                            <Setter Property="Margin" Value="10,0,10,10"/>
                        </Style>
                        <Style TargetType="controls:MultiTrigger">
                            <Setter Property="Margin" Value="10,0,10,10"/>
                        </Style>
                    </ItemsControl.Resources>
                </ItemsControl>

                <StackPanel Orientation="Horizontal">

                    <!--Add Trigger Button-->
                    <ui:Button Image="/TrakHound-Device-Manager;component/Resources/Add_01.png" Style="{StaticResource Button_Accent_Foreground}" Text="Add Trigger" ImageTextPadding="10" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,5" Clicked="AddTrigger_Clicked">
                        <ui:Button.ToolTip>
                            Add a new Trigger that defines a single condition that must be met (logical AND)
                        </ui:Button.ToolTip>
                    </ui:Button>

                    <!--Add MultiTrigger Button-->
                    <ui:Button Image="/TrakHound-Device-Manager;component/Resources/Add_01.png" Text="Add MultiTrigger" Style="{StaticResource Button_Accent_Foreground}" ImageTextPadding="10" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,5" Clicked="AddMultiTrigger_Clicked">
                        <ui:Button.ToolTip>
                            Add a new MultiTrigger that defines multiple Triggers where only one has to be met (logical AND/OR)
                        </ui:Button.ToolTip>
                    </ui:Button>

                </StackPanel>

            </StackPanel>

        </StackPanel>

    </Border>

</UserControl>
