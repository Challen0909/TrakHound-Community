<UserControl x:Class="TH_DeviceManager.DeviceManagerList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:controls="clr-namespace:TH_DeviceManager.Controls"
             xmlns:th_wpf="clr-namespace:TH_WPF;assembly=TH_WPF"

             xmlns:loadinganimation="clr-namespace:TH_WPF.LoadingAnimation;assembly=TH_WPF"
             
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TH_Styles;component/All.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="LightBorder" Color="#aaa"/>


            <Style TargetType="{x:Type DataGrid}">
                <!--<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />-->
                <Setter Property="Background" Value="{StaticResource Window_Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="GridLinesVisibility" Value="Vertical"/>
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource LightBorder}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource LightBorder}"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="IsReadOnly" Value="true"/>
                <!--<Setter Property="VerticalAlignment" Value="Top"/>-->
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="MinHeight" Value="30"/>
                <!--<Setter Property="MinWidth" Value="150"/>-->
                <Setter Property="Background" Value="#eee"/>
                <!--<Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1" />-->
                <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Border Name="bd"
                                Background="{TemplateBinding Background}"
                                Margin="0,0,0,0"
                                BorderBrush="{StaticResource LightBorder}" 
                                BorderThickness="0,0,1,0"    
                                >
                                <Grid>
                                    <!--Content-->
                                    <Border Padding="5,0">
                                        <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource Accent_Hover}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="#00000000" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBorder}" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}" />
                <Setter Property="MinHeight" Value="35"/>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <controls:DataGridMenuItem Header="Edit.." DataObject="{Binding}" Click="Edit_Click"/>
                            <controls:DataGridMenuItem Header="Edit Table.." DataObject="{Binding}" Click="EditTable_Click"/>
                            <Separator/>
                            <controls:DataGridMenuItem Header="Copy.." DataObject="{Binding}" Click="Option2MenuItem_Click"/>
                            <controls:DataGridMenuItem Header="Paste" DataObject="{Binding}" Click="Option2MenuItem_Click"/>
                            <Separator/>
                            <controls:DataGridMenuItem Header="Delete" DataObject="{Binding}" Click="Option2MenuItem_Click"/>
                            <Separator/>
                            <controls:DataGridMenuItem Header="Save to File.." DataObject="{Binding}" Click="Option2MenuItem_Click"/>
                            <controls:DataGridMenuItem Header="Share.." DataObject="{Binding}" Click="Option2MenuItem_Click"/>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{StaticResource Accent_Hover}"/>
                        <!--<Setter Property="BorderBrush" Value="{StaticResource LightBorder}"/>-->
                        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="{StaticResource Accent_Hover}"/>
                        <!--<Setter Property="BorderBrush" Value="#00000000"/>-->
                        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridCell">
                <!--<Setter Property="BorderThickness" Value="0,0,0,0"/>-->
                <Setter Property="MinHeight" Value="35"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                Margin="0"
                                Padding="10,0"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0"
                                >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <!--<Setter Property="BorderBrush" Value="#00000000"/>-->
                        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridRowHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBorder}"/>
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="SeparatorBrush" Value="{StaticResource LightBorder}"/>
                <Setter Property="SeparatorVisibility" Value="Visible"/>
            </Style>

            <Style TargetType="th_wpf:Button">
                <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
                <Setter Property="Background" Value="{StaticResource Accent_Normal}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="MinHeight" Value="25"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{StaticResource Accent_Light}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="controls:DataGridCellCheckBox" BasedOn="{StaticResource {x:Type CheckBox}}"/>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{StaticResource Window_Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Tool Bar-->
        <Border Grid.Row="0" Background="{StaticResource Accent_Normal}">

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0">
                <StackPanel.Resources>
                    <Style TargetType="th_wpf:Button">
                        <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Height" Value="30"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#33ffffff"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="{StaticResource Shade_Light}"/>
                        <Setter Property="Width" Value="1"/>
                        <Setter Property="Margin" Value="5,2"/>
                    </Style>
                </StackPanel.Resources>

                <!--Move Device(s) Up-->
                <th_wpf:Button Image="Resources/Arrow_Up_01.png" ToolTip="Move Device(s) Up in List"/>

                <!--Move Device(s) Down-->
                <th_wpf:Button Image="Resources/Arrow_Down_01.png" ToolTip="Move Device(s) Down in List"/>

                <!--Separator-->
                <Rectangle />

                <!--Copy Device(s)-->
                <th_wpf:Button Image="Resources/Copy_01.png" ToolTip="Copy Device(s)"/>

                <!--Remove Device(s)-->
                <th_wpf:Button Image="Resources/X_01.png" ToolTip="Remove Device(s)" Padding="8"/>

                <!--Separator-->
                <Rectangle />

                <!--Refresh Device List-->
                <th_wpf:Button Image="Resources/Refresh_01.png" ToolTip="Refresh Device List" Clicked="Refresh_Clicked"/>

                <!--Separator-->
                <Rectangle />

                <!--Edit Device(s)-->
                <th_wpf:Button Image="Resources/Edit_02.png" Text="Edit" ToolTip="Edit Device(s)" Clicked="Edit_Mulitple_Clicked"/>

                <!--Separator-->
                <Rectangle />

                <!--Share Device(s)-->
                <th_wpf:Button Image="Resources/Share_01.png" Text="Share" ToolTip="Share Device(s) by Adding to TrakHound's Device Catalog"/>

            </StackPanel>

        </Border>

        <!--Devices Table-->
        <DataGrid x:Name="Device_DG" Grid.Row="1" ItemsSource="{Binding Devices}"
                  AutoGenerateColumns="False"
                  VerticalScrollBarVisibility="Auto"  
                  >

            <DataGrid.Columns>

                <!--Edit Button-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <th_wpf:Button Text="Edit" DataObject="{Binding}" Clicked="Edit_Clicked"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Enable Client CheckBox-->
                <DataGridTemplateColumn Header="Client Enabled">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:DataGridCellCheckBox DataObject="{Binding}" IsChecked="{Binding ClientEnabled}" Checked="ClientEnabled_Checked" Unchecked="ClientEnabled_Unchecked"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Enable Server CheckBox-->
                <DataGridTemplateColumn Header="Server Enabled">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:DataGridCellCheckBox DataObject="{Binding}" IsChecked="{Binding ServerEnabled}" Checked="ServerEnabled_Checked" Unchecked="ServerEnabled_Unchecked"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Description Columns-->
                <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                <DataGridTextColumn Header="Manufacturer" Binding="{Binding Manufacturer}"/>
                <DataGridTextColumn Header="Model" Binding="{Binding Model}"/>
                <DataGridTextColumn Header="Serial" Binding="{Binding Serial}"/>
                <DataGridTextColumn Header="Device ID" Binding="{Binding Device_Id}"/>

            </DataGrid.Columns>

        </DataGrid>

    </Grid>

</UserControl>
