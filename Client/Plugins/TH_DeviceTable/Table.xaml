<UserControl x:Class="TH_DeviceTable.DeviceTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:local="clr-namespace:TH_DeviceTable"     
             xmlns:th_wpf="clr-namespace:TH_WPF;assembly=TH_WPF"
             
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded"
             
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="600">

    <UserControl.Resources>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="Background" Value="{StaticResource Accent_Normal}"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource LightBorder}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Name="bd"
                            Background="{TemplateBinding Background}"
                            Margin="0,0,0,0"
                            BorderThickness="0,0,0,0"    
                            >
                            <Grid>
                                <!--Content-->
                                <Border>
                                    <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#33ffffff"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="DataGridRowContextMenu">
            <local:DataGridMenuItem Header="Open Device Page" DataObject="{Binding}" Click="DataGridMenuItem_Click"/>
        </ContextMenu>
        
        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="Background" Value="{StaticResource Window_Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource LightBorder}" />
            <!--<Setter Property="BorderThickness" Value="0,0,0,1" />-->
            <Setter Property="BorderThickness" Value="0,1,0,1" />
            <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenu}"/>
            <Setter Property="Height" Value="65"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource Accent_Hover}"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Accent_Normal}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource Accent_Hover}"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Accent_Normal}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="Height" Value="65"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}"
                                Margin="0"
                                Padding="0"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0"
                                >
                            <!--<Grid>-->

                                <!--Content-->
                                <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                                <!--Overlay--><!--
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Available}" Value="false">
                                                    <Setter Property="Background" Value="#11000000"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Connected}" Value="false">
                                                    <Setter Property="Background" Value="#11000000"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                </Grid>-->

                            <!--</Grid>-->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type th_wpf:MeterDisplay}">
            <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}" />
            <Setter Property="ActiveLevelBrush" Value="{StaticResource Accent_Normal}"/>
            <Setter Property="InactiveLevelBrush" Value="{StaticResource Accent_Hover}"/>
            <Setter Property="FontSize" Value="24pt"/>
            <Setter Property="Maximum" Value="1"/>
            <Setter Property="ValueFormat" Value="P1"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <ImageBrush x:Key="Power_IMG" Stretch="Uniform" ImageSource="/TH_DeviceTable;component/Resources/Power_01.png"  />

        <ImageBrush x:Key="Alert_IMG" Stretch="Uniform" ImageSource="/TH_DeviceTable;component/Resources/Warning_01.png"  />

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Navbar-->
        <!--<StackPanel Orientation="Horizontal" Background="{StaticResource Accent_Normal}">
            <StackPanel.Resources>
                <Style TargetType="th_wpf:Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="Margin" Value="2,0"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#33ffffff"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <th_wpf:Button ToolTip="Refresh" Image="Resources/Refresh_01.png" Clicked="Refresh_Clicked"/>

        </StackPanel>-->

        <Grid Grid.Row="1" Background="{StaticResource Window_Background}">

            <DataGrid x:Name="Devices_DG" ItemsSource="{Binding DeviceInfos}"
                  AutoGenerateColumns="False"
                  BorderBrush="Transparent"
                  BorderThickness="0"
                  HeadersVisibility="Column"
                  VerticalAlignment="Stretch"
                      Background="#10000000"
                  >

                <DataGrid.Columns>

                    <!--Device Status-->
                    <DataGridTemplateColumn MinWidth="30">
                        <DataGridTemplateColumn.Header>
                            <Grid Background="Transparent">
                                <Grid.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="Device Status" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Displays the Device's current status whether it is in Production, Idle, or Alert.
                                        </TextBlock>
                                    </StackPanel>
                                </Grid.ToolTip>
                                <TextBlock Text="S" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Production}" Value="true">
                                                    <Setter Property="Background" Value="{StaticResource StatusGreen}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Idle}" Value="true">
                                                    <Setter Property="Background" Value="{StaticResource StatusYellow}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Alert}" Value="true">
                                                    <Setter Property="Background" Value="{StaticResource StatusRed}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>

                                    <Rectangle HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White">
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Height" Value="20"/>
                                                <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="OpacityMask" Value="{StaticResource Power_IMG}"/>
                                                <Setter Property="Opacity" Value="0"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Alert}" Value="true">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="00:00:1.0" Storyboard.TargetProperty="Opacity" From="0" To="1" >
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <CubicEase EasingMode="EaseOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="00:00:1.0" Storyboard.TargetProperty="Opacity" From="1" To="0" >
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <CubicEase EasingMode="EaseOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Available}" Value="true">
                                                        <Setter Property="OpacityMask" Value="{StaticResource Alert_IMG}"/>
                                                    </DataTrigger>
                                                    <Trigger Property="Opacity" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Description-->
                    <DataGridTemplateColumn Header="Description" Width="200" MinWidth="200">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Background="Transparent">
                                    <Grid.ToolTip>
                                        <StackPanel Margin="10" Width="300">
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="FontSize" Value="12"/>
                                                    <Setter Property="Margin" Value="0,2"/>
                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                </Style>
                                            </StackPanel.Resources>

                                            <!--Manufacturer Logo-->
                                            <th_wpf:ImageDisplay Image="{Binding ManufacturerLogo}" Padding="5" MaxHeight="60" MaxWidth="150" HorizontalAlignment="Left"/>

                                            <TextBlock Text="{Binding Description.Description}" Foreground="{StaticResource Foreground_Normal}" FontSize="14" TextWrapping="Wrap"/>

                                            <TextBlock>
                                                <Run Text="Manufacturer :" Foreground="{StaticResource Foreground_Light}"/>
                                                <Run Text="{Binding Description.Manufacturer}" Foreground="{StaticResource Foreground_Normal}"/>
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="Model :" Foreground="{StaticResource Foreground_Light}"/>
                                                <Run Text="{Binding Description.Model}" Foreground="{StaticResource Foreground_Normal}"/>
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="Serial :" Foreground="{StaticResource Foreground_Light}"/>
                                                <Run Text="{Binding Description.Serial}" Foreground="{StaticResource Foreground_Normal}"/>
                                            </TextBlock>

                                            <TextBlock>
                                                <Run Text="Controller :" Foreground="{StaticResource Foreground_Light}"/>
                                                <Run Text="{Binding Description.Controller}" Foreground="{StaticResource Foreground_Normal}"/>
                                            </TextBlock>


                                            <TextBlock>
                                                <Run Text="Location :" Foreground="{StaticResource Foreground_Light}"/>
                                                <Run Text="{Binding Description.Location}" Foreground="{StaticResource Foreground_Normal}"/>
                                            </TextBlock>

                                        </StackPanel>
                                    </Grid.ToolTip>
                                    <Grid.RowDefinitions>
                                        <RowDefinition>
                                            <RowDefinition.Style>
                                                <Style TargetType="RowDefinition">
                                                    <Setter Property="Height" Value="6*"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ManufacturerLogo}" Value="{x:Null}">
                                                            <Setter Property="Height" Value="0"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RowDefinition.Style>
                                        </RowDefinition>
                                        <RowDefinition Height="4*"/>
                                    </Grid.RowDefinitions>

                                    <!--Manufacturer Logo-->
                                    <th_wpf:ImageDisplay Image="{Binding ManufacturerLogo}" Padding="10,5" MaxHeight="40"/>

                                    <!--Device Description-->
                                    <TextBlock Grid.Row="1" Text="{Binding DeviceDescription}" Foreground="{StaticResource Foreground_Normal}" FontSize="12" Margin="0,2" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Device Id-->
                    <DataGridTemplateColumn Header="Device ID" Width="75" MinWidth="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Viewbox Margin="10">
                                    <TextBlock Text="{Binding Description.Device_ID}" Foreground="{StaticResource Foreground_Normal}" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Viewbox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--OEE-->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <Border Background="Transparent">
                                <Border.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="OEE" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Overall Equipment Efficiency (OEE) for the Device. Value is given for the current shift.
                                        </TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <TextBlock Text="OEE" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <th_wpf:MeterDisplay Value="{Binding Oee}" >
                                    <th_wpf:MeterDisplay.Style>
                                        <Style TargetType="th_wpf:MeterDisplay" BasedOn="{StaticResource {x:Type th_wpf:MeterDisplay}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding OeeStatus}" Value="0">
                                                    <Setter Property="ActiveLevelBrush" Value="White"/>
                                                    <Setter Property="InactiveLevelBrush" Value="#66ffffff"/>
                                                    <Setter Property="Foreground" Value="White" />
                                                    <Setter Property="Background" Value="{StaticResource StatusBlue}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OeeStatus}" Value="1">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusBlue}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusBlue_Hover}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OeeStatus}" Value="2">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusGreen}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusGreen_Hover}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </th_wpf:MeterDisplay.Style>
                                </th_wpf:MeterDisplay>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Availability-->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <Border Background="Transparent">
                                <Border.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="Availability" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Availability portion of the Overall Equipment Efficiency (OEE) for the Device. Value is given for the current shift.
                                        </TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <TextBlock Text="Availability" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <th_wpf:MeterDisplay Value="{Binding Availability}" >
                                    <th_wpf:MeterDisplay.Style>
                                        <Style TargetType="th_wpf:MeterDisplay" BasedOn="{StaticResource {x:Type th_wpf:MeterDisplay}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding AvailabilityStatus}" Value="0">
                                                    <Setter Property="ActiveLevelBrush" Value="White"/>
                                                    <Setter Property="InactiveLevelBrush" Value="#66ffffff"/>
                                                    <Setter Property="Foreground" Value="White" />
                                                    <Setter Property="Background" Value="{StaticResource StatusBlue}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AvailabilityStatus}" Value="1">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusBlue}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusBlue_Hover}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AvailabilityStatus}" Value="2">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusGreen}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusGreen_Hover}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </th_wpf:MeterDisplay.Style>
                                </th_wpf:MeterDisplay>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Performance-->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <Border Background="Transparent">
                                <Border.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="Performance" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Performance portion of the Overall Equipment Efficiency (OEE) for the Device. Value is given for the current shift.
                                        </TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <TextBlock Text="Performance" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <th_wpf:MeterDisplay Value="{Binding Performance}" >
                                    <th_wpf:MeterDisplay.Style>
                                        <Style TargetType="th_wpf:MeterDisplay" BasedOn="{StaticResource {x:Type th_wpf:MeterDisplay}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PerformanceStatus}" Value="0">
                                                    <Setter Property="ActiveLevelBrush" Value="White"/>
                                                    <Setter Property="InactiveLevelBrush" Value="#66ffffff"/>
                                                    <Setter Property="Foreground" Value="White" />
                                                    <Setter Property="Background" Value="{StaticResource StatusBlue}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PerformanceStatus}" Value="1">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusBlue}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusBlue_Hover}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PerformanceStatus}" Value="2">
                                                    <Setter Property="ActiveLevelBrush" Value="{StaticResource StatusGreen}"/>
                                                    <Setter Property="InactiveLevelBrush" Value="{StaticResource StatusGreen_Hover}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </th_wpf:MeterDisplay.Style>
                                </th_wpf:MeterDisplay>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Production Status-->
                    <DataGridTemplateColumn MinWidth="200">
                        <DataGridTemplateColumn.Header>
                            <Border Background="Transparent">
                                <Border.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="Production Status" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Current Production Status value and the percentage of time that the device has been in this status for the current shift.
                                        </TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <TextBlock Text="Production Status" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <th_wpf:TimeProgress Text="{Binding ProductionStatus}" Value="{Binding ProductionStatusSeconds}" Maximum="{Binding ProductionStatusTotal}">
                                    <th_wpf:TimeProgress.Style>
                                        <Style TargetType="th_wpf:TimeProgress">
                                            <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
                                            <Setter Property="BarBrush" Value="{Binding ProductionStatusBrush}"/>
                                            <Setter Property="BarBackgroundBrush" Value="{Binding ProductionStatusBrushHover}"/>
                                            <Setter Property="BarHeight" Value="10"/>
                                        </Style>
                                    </th_wpf:TimeProgress.Style>
                                </th_wpf:TimeProgress>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Part Count-->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <Border Background="Transparent">
                                <Border.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Text="Part Count" FontWeight="Bold" Margin="0,0,0,5"/>
                                        <TextBlock TextWrapping="Wrap">
                                        Total Part Count for the current shift.
                                        </TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <TextBlock Text="Part Count" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Viewbox Margin="10">
                                    <TextBlock Text="{Binding PartCount}" Foreground="{StaticResource Foreground_Normal}" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Viewbox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>

            </DataGrid>

        </Grid>

    </Grid>
    
</UserControl>
