<!--Copyright (c) 2017 TrakHound Inc., All Rights Reserved.-->

<!--This file is subject to the terms and conditions defined in-->
<!--file 'LICENSE.txt', which is part of this source code package.-->

<UserControl x:Class="TrakHound_Dashboard.Controls.Message_Center.Message"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:locad="clr-namespace:TrakHound_Dashboard.Controls.Message_Center;assembly=TrakHound-Dashboard"
             xmlns:ui="clr-namespace:TrakHound_UI;assembly=TrakHound-UI"
             
             mc:Ignorable="d"
             >
    
    <UserControl.RenderTransform>
        <TranslateTransform X="310"/>
    </UserControl.RenderTransform>
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Shown}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="00:00:0.75" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="310" To="0" >
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="00:00:0.3" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="0" To="310" >
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseIn"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Grid x:Name="root" MinWidth="100" MinHeight="45">

        <Border>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="Background" Value="#00000000"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Data.Action}" Value="{x:Null}">
                            <Setter Property="Cursor" Value="Arrow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Read}" Value="true">
                            <Setter Property="Opacity" Value="0.3"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1.0"/>
                            <Setter Property="Background" Value="#11ffffff"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto" MinWidth="50"/>
                </Grid.ColumnDefinitions>

                <!--Image-->
                <StackPanel>

                    <Image Source="{Binding Data.Image}" Height="20" Width="20" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Data.Image}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Rectangle Margin="10" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Rectangle.Resources>
                            <ImageBrush x:Key="Custom_IMG"  Stretch="Uniform" ImageSource="{Binding Data.Image}" />
                            <ImageBrush x:Key="Notification_IMG"  Stretch="Uniform" ImageSource="/TrakHound-Dashboard;component/Resources/Bell_01.png" />
                            <ImageBrush x:Key="Warning_IMG"  Stretch="Uniform" ImageSource="/TrakHound-Dashboard;component/Resources/Warning_01.png" />
                            <ImageBrush x:Key="Error_IMG"  Stretch="Uniform" ImageSource="/TrakHound-Dashboard;component/Resources/Error_01.png" />
                        </Rectangle.Resources>

                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="OpacityMask" Value="{StaticResource Notification_IMG}" />
                                <Setter Property="Fill" Value="#aaffffff"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Data.Image}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>

                </StackPanel>

                <Grid Grid.Column="1" Margin="10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--Notification Title-->
                    <TextBlock Text="{Binding Data.Title}" TextWrapping="Wrap" FontSize="16" FontWeight="ExtraLight" Margin="0,5">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#aaffffff"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <!--Notification Text-->
                    <TextBlock Grid.Row="1" Text="{Binding Data.Text}" TextWrapping="Wrap" FontSize="12" FontWeight="ExtraLight" Margin="0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#aaffffff"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </Grid>
                
                <Grid Grid.ColumnSpan="3" Background="Transparent" MouseDown="Grid_MouseDown"/>
                
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Time-->
                    <TextBlock Text="{Binding Data.AddedTime, StringFormat=d}" Foreground="#88ffffff" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>                       
                    </TextBlock>
                    
                    <!--Close Button-->
                    <ui:Button Grid.RowSpan="2" Height="30" Width="30" VerticalAlignment="Center" Clicked="Close_Clicked" Image="/TrakHound-Dashboard;component/Resources/X_01.png">
                        <ui:Button.Style>
                            <Style TargetType="ui:Button">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Foreground" Value="#fff"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="#10ffffff"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsMouseOver}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:Button.Style>
                    </ui:Button>

                </Grid>

            </Grid>

        </Border>

    </Grid>
    
</UserControl>
