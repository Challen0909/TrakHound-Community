<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:ui="clr-namespace:TrakHound_UI;assembly=TrakHound-UI">

    <!--Button with Accent Color as Background-->
    <Style x:Key="Button_Accent_Background" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{DynamicResource Text_Alternate}"/>
        <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_LightBlue}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Disabled_Text}"/>
                <Setter Property="Background" Value="{DynamicResource Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Accent Color as Foreground-->
    <Style x:Key="Button_Accent_Foreground" TargetType="{x:Type ui:Button}">
        <!--<Setter Property="Foreground" Value="{StaticResource TrakHound_Blue}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="true">

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource TrakHound_LightBlue_Color}" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="{StaticResource TrakHound_Blue_Color}" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Disabled_Text}"/>
            </Trigger>

        </Style.Triggers>-->
    </Style>

    <!--Button with Opposite Color as Foreground-->
    <Style x:Key="Button_Opposite_Foreground" TargetType="ui:Button">
        <!--<Setter Property="Foreground" Value="{DynamicResource Text_Alternate}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#22ffffff" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.05"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Disabled_Text}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--Button with Transparent Background but with a border-->
    <Style x:Key="Button_Transparent_Background" TargetType="{x:Type ui:Button}">
        <!--<Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#10000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Disabled_Text}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--Toolbar Button-->
    <Style x:Key="ToolBar_Button" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource TrakHound_Blue_Color}" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="{DynamicResource Text_Color}" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Page List Button-->
    <!--<Style x:Key="ListButton_PageList" TargetType="ui:ListButton">-->
    <Style TargetType="{x:Type ui:ListButton}">
        <!--<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="SelectorForeground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource Text_Color}" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource Text_Color}" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#eee" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="{DynamicResource Foreground_Color}" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource Foreground_Color}" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource Text_Alternate_Color}" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#88ffffff" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource TrakHound_Blue_Color}" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="{DynamicResource Foreground_Color}" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{DynamicResource Foreground_Color}" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--Rotating Button-->
    <Style x:Key="RotatingButton" TargetType="Rectangle">
        <!--<Setter Property="Fill" Value="{DynamicResource Text}"/>
        <Style.Triggers>

            <DataTrigger Binding="{Binding IsExpanded}" Value="true">

                <Setter Property="ToolTip" Value="Collapse Page List (Hide Page Titles)"/>

                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource TrakHound_Blue_Color}" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="{DynamicResource Text_Color}" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>-->
    </Style>

</ResourceDictionary>