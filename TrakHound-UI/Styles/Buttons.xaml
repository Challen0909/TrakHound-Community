<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:TrakHound_UI;assembly=TrakHound-UI"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--Button with Accent Color as Background-->
    <Style x:Key="Button_Accent_Background" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
        <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_LightBlue}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="Background" Value="#ccc"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Accent Color as Foreground-->
    <Style x:Key="Button_Accent_Foreground" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{StaticResource TrakHound_Blue}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource TrakHound_LightBlue}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Opposite Color as Foreground-->
    <Style x:Key="Button_Opposite_Foreground" TargetType="ui:Button">
        <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#22ffffff"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#33ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Transparent Background but with a border-->
    <Style x:Key="Button_Transparent_Background" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Setter Property="BorderBrush" Value="{StaticResource Shade_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#10000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Page List Button-->
    <Style x:Key="ListButton_PageList" TargetType="ui:ListButton">
        <Setter Property="Foreground" Value="#333"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
                <Setter Property="Foreground" Value="#fff"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
                <Setter Property="Foreground" Value="#fff"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--<Style x:Key="ListButton_PageList" TargetType="ui:ListButton">
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>