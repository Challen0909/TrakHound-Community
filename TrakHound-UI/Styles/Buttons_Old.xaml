<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:TrakHound_UI;assembly=TrakHound-UI"
                    >
    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <!--Button with Accent Color as Background-->
    <Style x:Key="Button_Accent_Background" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{StaticResource Foreground_Opposite_Normal}"/>
        <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_LightBlue}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="Background" Value="#ccc"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Accent Color as Foreground-->
    <Style x:Key="Button_Accent_Foreground" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="#0080FF"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Style.Triggers>
            
            <Trigger Property="IsMouseOver" Value="true">

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#40a0ff" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="#0080FF" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

    <!--Button with Opposite Color as Foreground-->
    <Style x:Key="Button_Opposite_Foreground" TargetType="ui:Button">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#22ffffff" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.05"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#22ffffff"/>
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#33ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button with Transparent Background but with a border-->
    <Style x:Key="Button_Transparent_Background" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="{StaticResource Foreground_Normal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Setter Property="BorderBrush" Value="{StaticResource Shade_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#10000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Toolbar Button-->
    <Style x:Key="ToolBar_Button" TargetType="{x:Type ui:Button}">
        <Setter Property="Foreground" Value="#666666"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="ImageTextPadding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#0080ff" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="#666666" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ccc"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Page List Button-->
    <Style x:Key="ListButton_PageList" TargetType="ui:ListButton">
        <Setter Property="Foreground" Value="#666666"/>
        <Setter Property="SelectorForeground" Value="#666666"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#333" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#eee" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#333" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="#666666" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#666666" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
               
                <!--<Setter Property="Background" Value="#eee"/>
                <Setter Property="Foreground" Value="#333"/>-->
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#fff" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#0080ff" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#88ffffff" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="#666666" Storyboard.TargetProperty="(ui:ListButton.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(ui:ListButton.Background).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#666666" Storyboard.TargetProperty="(ui:ListButton.SelectorForeground).(SolidColorBrush.Color)" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                
                <!--<Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
                <Setter Property="Foreground" Value="#fff"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--<Style x:Key="ListButton_PageList" TargetType="ui:ListButton">
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource TrakHound_Blue}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>